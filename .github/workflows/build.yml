name: Build and Release Installer

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        shell: pwsh
        run: |
          if ($env:GITHUB_REF -match "refs/tags/v(.+)") {
            $version = $matches[1]
            Write-Host "Extracted version: $version"
            echo "VERSION=$version" >> $env:GITHUB_ENV
          } else {
            $version = "0.0.1-dev"
            Write-Host "No tag found, using dev version: $version"
            echo "VERSION=$version" >> $env:GITHUB_ENV
          }

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v2

      - name: Restore NuGet packages
        run: dotnet restore SFROofsSafetyMonitor/SFROofsSafetyMonitor.csproj

      - name: Build with dotnet
        run: dotnet build SFROofsSafetyMonitor/SFROofsSafetyMonitor.csproj -c Release -p:Version=${{ env.VERSION }}

      - name: Prepare publish directory
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path "publish" -Force
          
          # Copy main assembly and dependencies (dotnet build output path)
          Copy-Item "SFROofsSafetyMonitor/bin/Release/net48/*" "publish/" -Recurse -Force
          
          # Copy app.config as .dll.config (required for assembly binding)
          Copy-Item "SFROofsSafetyMonitor/App.config" "publish/SFROofsSafetyMonitor.dll.config" -Force
          
          # Copy roofs.json config file
          Copy-Item "SFROofsSafetyMonitor/roofs.json" "publish/" -Force
          
          Write-Host "Published files:"
          Get-ChildItem "publish" -Recurse

      - name: Setup WiX
        shell: pwsh
        run: |
          # Download and install WiX 3.14
          $url = "https://github.com/wixtoolset/wix3/releases/download/wix3141rtm/wix314.exe"
          $output = "wix314.exe"
          Write-Host "Downloading WiX from $url"
          Invoke-WebRequest -Uri $url -OutFile $output
          Write-Host "Installing WiX silently"
          Start-Process -FilePath $output -ArgumentList "/quiet" -Wait
          Write-Host "WiX installation completed"
          
      - name: Build Installer
        shell: pwsh
        run: |
          $candlePath = "C:\Program Files (x86)\WiX Toolset v3.14\bin\candle.exe"
          $lightPath = "C:\Program Files (x86)\WiX Toolset v3.14\bin\light.exe"
          
          if (-not (Test-Path $candlePath)) {
            Write-Host "Candle.exe not found at $candlePath"
            Get-ChildItem "C:\Program Files (x86)" -Recurse -Name "candle.exe" -ErrorAction SilentlyContinue
            exit 1
          }
          
          Write-Host "Building installer with WiX"
          Write-Host "Using version: ${{ env.VERSION }}"
          Write-Host "Available files in publish directory:"
          Get-ChildItem "publish" -Recurse
          
          Push-Location installer
          & $candlePath SFROofsSafetyMonitorInstaller.wxs -dProductVersion="${{ env.VERSION }}.0"
          if ($LASTEXITCODE -ne 0) {
            Write-Host "Candle failed with exit code $LASTEXITCODE"
            Pop-Location
            exit 1
          }
          
          & $lightPath SFROofsSafetyMonitorInstaller.wixobj -o ..\SFROofsSafetyMonitorInstaller.msi
          if ($LASTEXITCODE -ne 0) {
            Write-Host "Light failed with exit code $LASTEXITCODE"
            Pop-Location
            exit 1
          }
          Pop-Location

      - name: Upload MSI to Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v2
        with:
          files: SFROofsSafetyMonitorInstaller.msi